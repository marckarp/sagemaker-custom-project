'Description': 'Toolchain template which provides the resources needed to represent
  infrastructure as code. This template specifically creates a CI/CD pipeline to deploy
  a given inference image and pretrained Model to two stages in CD -- staging and
  production.'
'Parameters':
  'SageMakerProjectName':
    'Type': 'String'
    'Description': 'Name of the project'
    'MinLength': !!int '1'
    'MaxLength': !!int '32'
    'AllowedPattern': '^[a-zA-Z](-*[a-zA-Z0-9])*'
  'SageMakerProjectId':
    'Type': 'String'
    'Description': 'Service generated Id of the project.'
  'CDPSecrerKey':
    'Type': 'String'
    'Description': 'Name of the Secret ket in Secret Manager'

'Resources':
  'MlOpsArtifactsBucket':
    'Type': 'AWS::S3::Bucket'
    'DeletionPolicy': 'Retain'
    'Properties':
      'BucketName':
        'Fn::Sub': 'sagemaker-project-${SageMakerProjectId}'


ApprovalLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |
          import json
          import boto3
          import os

          s3 = boto3.client('s3')
          codepipeline = boto3.client('codepipeline')

          def lambda_handler(event, context):
              project_name = os.environ['SageMakerProjectName']
              project_id = os.environ['SageMakerProjectId']

              model_package_group_name = event['detail']['ModelPackageGroupName']
              pipeline_name = f'{project_name}-{project_id}-modeldeploy'
              s3_bucket_name= f'sagemaker-project-{project_id}'

              s3.put_object(Bucket=s3_bucket_name, Key='model-group/model-package-group-name.json', Body=json.dumps({'SOURCE_MODEL_PACKAGE_GROUP_NAME': model_package_group_name}))

              response = codepipeline.start_pipeline_execution(name=pipeline_name)

              return {
                  'statusCode': 200,
                  'body': 'Success'
              }
      Handler: index.lambda_handler
      Runtime: python3.8
      Environment:
      Variables:
        SageMakerProjectId: !Ref SageMakerProjectId
        SageMakerProjectName: !Ref SageMakerProjectName

  ApprovalEventRule:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub sagemaker-${SageMakerProjectName}-${SageMakerProjectId}-model-deploy-approval-trigger # max: 10+33+15+5=63 chars
      Description: "Rule to trigger a Lambda function when SageMaker Model Group in the registry is approved. The Model Group needs to have the prefix salesforce"
      EventPattern:
        source:
          - "aws.sagemaker"
        detail-type:
          - "SageMaker Model Package State Change"
        detail:
          ModelPackageGroupName:
            - prefix: "salesforce"
          ModelApprovalStatus:
            - "Approved"
      Targets:
        - Arn: !GetAtt ApprovalLambdaFunction.Arn
          Id: !Sub sagemaker-${SageMakerProjectName}-trigger
          RoleArn:
            !Join [ ':', [ 'arn', !Ref 'AWS::Partition', 'iam:', !Ref 'AWS::AccountId', 'role/service-role/AmazonSageMakerServiceCatalogProductsUseRole'] ]

  'ModelDeployCodeCommitEventRule':
    'Type': 'AWS::Events::Rule'
    'Properties':
      'Name':
        'Fn::Sub': 'sagemaker-${SageMakerProjectName}-${SageMakerProjectId}-code'
      'Description': 'Rule to trigger a deployment when CodeCommit is updated with
        a commit'
      'EventPattern':
        'source':
        - 'aws.codecommit'
        'detail-type':
        - 'CodeCommit Repository State Change'
        'resources':
        - 'Fn::GetAtt': 'ModelDeployCodeCommitRepository.Arn'
        'detail':
          'referenceType':
          - 'branch'
          'referenceName':
          - 'main'
      'State': 'ENABLED'
      'Targets':
      - 'Arn':
          'Fn::Join':
          - ':'
          - - 'arn'
            - 'Ref': 'AWS::Partition'
            - 'codepipeline'
            - 'Ref': 'AWS::Region'
            - 'Ref': 'AWS::AccountId'
            - 'Ref': 'ModelDeployPipeline'
        'RoleArn':
          'Fn::Join':
          - ':'
          - - 'arn'
            - 'Ref': 'AWS::Partition'
            - 'iam:'
            - 'Ref': 'AWS::AccountId'
            - 'role/service-role/AmazonSageMakerServiceCatalogProductsUseRole'
        'Id':
          'Fn::Sub': 'codecommit-${SageMakerProjectName}-trigger'
  'ModelDeployCodeCommitRepository':
    'Type': 'AWS::CodeCommit::Repository'
    'Properties':
      'RepositoryName':
        'Fn::Sub': 'sagemaker-${SageMakerProjectName}-${SageMakerProjectId}-modeldeploy'
      'RepositoryDescription':
        'Fn::Sub': 'SageMaker Endpoint deployment infrastructure as code for the Project
          ${SageMakerProjectName}'
      'Code':
        'S3':
          'Bucket': 'sagemaker-servicecatalog-seedcode-us-east-1'
          'Key': 'toolchain/mpg-deployment-config-v1.1.zip'
        'BranchName': 'main'
  'ModelDeployBuildProject':
    'Type': 'AWS::CodeBuild::Project'
    'Properties':
      'Name':
        'Fn::Sub': 'sagemaker-${SageMakerProjectName}-${SageMakerProjectId}-modeldeploy'
      'Description': 'Builds the Cfn template which defines the Endpoint with specified
        configuration'
      'ServiceRole':
        'Fn::Join':
        - ':'
        - - 'arn'
          - 'Ref': 'AWS::Partition'
          - 'iam:'
          - 'Ref': 'AWS::AccountId'
          - 'role/service-role/AmazonSageMakerServiceCatalogProductsUseRole'
      'Artifacts':
        'Type': 'CODEPIPELINE'
      'Environment':
        'Type': 'LINUX_CONTAINER'
        'ComputeType': 'BUILD_GENERAL1_SMALL'
        'Image': 'aws/codebuild/amazonlinux2-x86_64-standard:3.0'
        'EnvironmentVariables':
        - 'Name': 'SAGEMAKER_PROJECT_NAME'
          'Value':
            'Ref': 'SageMakerProjectName'
        - 'Name': 'SAGEMAKER_PROJECT_ID'
          'Value':
            'Ref': 'SageMakerProjectId'
        - 'Name': 'ARTIFACT_BUCKET'
          'Value':
            'Ref': 'MlOpsArtifactsBucket'
        - 'Name': 'MODEL_EXECUTION_ROLE_ARN'
          'Value':
            'Fn::Join':
            - ':'
            - - 'arn'
              - 'Ref': 'AWS::Partition'
              - 'iam:'
              - 'Ref': 'AWS::AccountId'
              - 'role/service-role/AmazonSageMakerServiceCatalogProductsUseRole'
        - 'Name': 'SAGEMAKER_PROJECT_ARN'
          'Value':
            'Fn::Join':
            - ':'
            - - 'arn'
              - 'Ref': 'AWS::Partition'
              - 'sagemaker'
              - 'Ref': 'AWS::Region'
              - 'Ref': 'AWS::AccountId'
              - 'Fn::Sub': 'project/${SageMakerProjectName}'
        - 'Name': 'SOURCE_MODEL_PACKAGE_GROUP_NAME'
          'Value':
            'Ref': 'SourceModelPackageGroupName'
        - 'Name': 'AWS_REGION'
          'Value':
            'Ref': 'AWS::Region'
        - 'Name': 'EXPORT_TEMPLATE_NAME'
          'Value': 'template-export.yml'
        - 'Name': 'EXPORT_TEMPLATE_STAGING_CONFIG'
          'Value': 'staging-config-export.json'
        - 'Name': 'EXPORT_TEMPLATE_PROD_CONFIG'
          'Value': 'prod-config-export.json'
      'Source':
        'Type': 'CODEPIPELINE'
        'BuildSpec': 'buildspec.yml'
      'TimeoutInMinutes': !!int '30'
  'ModelDeployTestProject':
    'Type': 'AWS::CodeBuild::Project'
    'Properties':
      'Name':
        'Fn::Sub': 'sagemaker-${SageMakerProjectName}-${SageMakerProjectId}-testing'
      'Description': 'Test the deployment endpoint'
      'ServiceRole':
        'Fn::Join':
        - ':'
        - - 'arn'
          - 'Ref': 'AWS::Partition'
          - 'iam:'
          - 'Ref': 'AWS::AccountId'
          - 'role/service-role/AmazonSageMakerServiceCatalogProductsUseRole'
      'Artifacts':
        'Type': 'CODEPIPELINE'
      'Environment':
        'Type': 'LINUX_CONTAINER'
        'ComputeType': 'BUILD_GENERAL1_SMALL'
        'Image': 'aws/codebuild/amazonlinux2-x86_64-standard:3.0'
        'EnvironmentVariables':
        - 'Name': 'SAGEMAKER_PROJECT_NAME'
          'Value':
            'Ref': 'SageMakerProjectName'
        - 'Name': 'SAGEMAKER_PROJECT_ID'
          'Value':
            'Ref': 'SageMakerProjectId'
        - 'Name': 'AWS_REGION'
          'Value':
            'Ref': 'AWS::Region'
        - 'Name': 'BUILD_CONFIG'
          'Value': 'staging-config-export.json'
        - 'Name': 'EXPORT_TEST_RESULTS'
          'Value': 'test-results.json'
      'Source':
        'Type': 'CODEPIPELINE'
        'BuildSpec': 'test/buildspec.yml'
      'TimeoutInMinutes': !!int '30'
  'ModelDeployPipeline':
    'Type': 'AWS::CodePipeline::Pipeline'
    'DependsOn': 'MlOpsArtifactsBucket'
    'Properties':
      'Name':
        'Fn::Sub': 'sagemaker-${SageMakerProjectName}-${SageMakerProjectId}-modeldeploy'
      'RoleArn':
        'Fn::Join':
        - ':'
        - - 'arn'
          - 'Ref': 'AWS::Partition'
          - 'iam:'
          - 'Ref': 'AWS::AccountId'
          - 'role/service-role/AmazonSageMakerServiceCatalogProductsUseRole'
      'ArtifactStore':
        'Type': 'S3'
        'Location':
          'Ref': 'MlOpsArtifactsBucket'
      'Stages':
      - 'Name': 'Source'
        'Actions':
        - 'Name': 'ModelDeployInfraCode'
          'ActionTypeId':
            'Category': 'Source'
            'Owner': 'AWS'
            'Provider': 'CodeCommit'
            'Version': !!int '1'
          'Configuration':
            'PollForSourceChanges': !!bool 'false'
            'RepositoryName':
              'Fn::GetAtt': 'ModelDeployCodeCommitRepository.Name'
            'BranchName': 'main'
          'OutputArtifacts':
          - 'Name': 'SourceArtifact'
      - 'Name': 'Build'
        'Actions':
        - 'Name': 'BuildDeploymentTemplates'
          'ActionTypeId':
            'Category': 'Build'
            'Owner': 'AWS'
            'Provider': 'CodeBuild'
            'Version': !!int '1'
          'InputArtifacts':
          - 'Name': 'SourceArtifact'
          'OutputArtifacts':
          - 'Name': 'BuildArtifact'
          'Configuration':
            'ProjectName':
              'Ref': 'ModelDeployBuildProject'
          'RunOrder': !!int '1'
      - 'Name': 'DeployStaging'
        'Actions':
        - 'Name': 'DeployResourcesStaging'
          'InputArtifacts':
          - 'Name': 'BuildArtifact'
          'ActionTypeId':
            'Category': 'Deploy'
            'Owner': 'AWS'
            'Version': !!int '1'
            'Provider': 'CloudFormation'
          'Configuration':
            'ActionMode': 'REPLACE_ON_FAILURE'
            'Capabilities': 'CAPABILITY_NAMED_IAM'
            'RoleArn':
              'Fn::Join':
              - ':'
              - - 'arn'
                - 'Ref': 'AWS::Partition'
                - 'iam:'
                - 'Ref': 'AWS::AccountId'
                - 'role/service-role/AmazonSageMakerServiceCatalogProductsUseRole'
            'StackName':
              'Fn::Sub': 'sagemaker-${SageMakerProjectName}-${SageMakerProjectId}-deploy-staging'
            'TemplateConfiguration': 'BuildArtifact::staging-config-export.json'
            'TemplatePath': 'BuildArtifact::template-export.yml'
          'RunOrder': !!int '1'
        - 'Name': 'TestStaging'
          'ActionTypeId':
            'Category': 'Build'
            'Owner': 'AWS'
            'Provider': 'CodeBuild'
            'Version': !!int '1'
          'InputArtifacts':
          - 'Name': 'SourceArtifact'
          - 'Name': 'BuildArtifact'
          'OutputArtifacts':
          - 'Name': 'TestArtifact'
          'Configuration':
            'ProjectName':
              'Ref': 'ModelDeployTestProject'
            'PrimarySource': 'SourceArtifact'
          'RunOrder': !!int '2'
        - 'Name': 'ApproveDeployment'
          'ActionTypeId':
            'Category': 'Approval'
            'Owner': 'AWS'
            'Version': !!int '1'
            'Provider': 'Manual'
          'Configuration':
            'CustomData': 'Approve this model for Production'
          'RunOrder': !!int '3'
      - 'Name': 'DeployProd'
        'Actions':
        - 'Name': 'DeployResourcesProd'
          'InputArtifacts':
          - 'Name': 'BuildArtifact'
          'ActionTypeId':
            'Category': 'Deploy'
            'Owner': 'AWS'
            'Version': !!int '1'
            'Provider': 'CloudFormation'
          'Configuration':
            'ActionMode': 'CREATE_UPDATE'
            'RoleArn':
              'Fn::Join':
              - ':'
              - - 'arn'
                - 'Ref': 'AWS::Partition'
                - 'iam:'
                - 'Ref': 'AWS::AccountId'
                - 'role/service-role/AmazonSageMakerServiceCatalogProductsUseRole'
            'Capabilities': 'CAPABILITY_NAMED_IAM'
            'StackName':
              'Fn::Sub': 'sagemaker-${SageMakerProjectName}-${SageMakerProjectId}-deploy-prod'
            'TemplateConfiguration': 'BuildArtifact::prod-config-export.json'
            'TemplatePath': 'BuildArtifact::template-export.yml'
          'RunOrder': !!int '1'
'Rules': {}
